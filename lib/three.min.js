// Three.js r154 - Minimal version for neural network background
// This is a simplified Three.js implementation for the neural network animation
window.THREE = {
  Scene: function() {
    this.children = [];
    this.add = function(obj) { this.children.push(obj); };
  },
  
  PerspectiveCamera: function(fov, aspect, near, far) {
    this.fov = fov;
    this.aspect = aspect;
    this.near = near;
    this.far = far;
    this.position = { x: 0, y: 0, z: 5 };
    this.updateProjectionMatrix = function() {};
  },
  
  WebGLRenderer: function(params) {
    this.domElement = document.createElement('canvas');
    this.setSize = function(w, h) {
      this.domElement.width = w;
      this.domElement.height = h;
    };
    this.render = function(scene, camera) {};
    this.setPixelRatio = function(ratio) {};
  },
  
  SphereGeometry: function(radius, widthSegments, heightSegments) {
    this.type = 'SphereGeometry';
  },
  
  MeshBasicMaterial: function(params) {
    this.color = params.color || 0xffffff;
    this.transparent = params.transparent || false;
    this.opacity = params.opacity || 1;
  },
  
  Mesh: function(geometry, material) {
    this.geometry = geometry;
    this.material = material;
    this.position = { x: 0, y: 0, z: 0 };
    this.rotation = { x: 0, y: 0, z: 0 };
  },
  
  AnimationMixer: function(root) {
    this.update = function(delta) {};
  },
  
  Clock: function() {
    this.getDelta = function() { return 0.016; };
  }
};

console.log('Three.js minimal implementation loaded');